111-116

接口：interface
    JDK 8之前接口中只可以写常量和抽象方法

    接口的用法：（被实现）
        用来被类实现（implements），实现接口的类被称为实现类，实现类可以理解成子类
            修饰符 class 实现类 implements 接口1，接口2，接口3，···{
            }
    接口与接口的关系：（多继承）
        一个接口可以同时继承多个接口
        作用：规范合并，整合多个接口为同一个接口，便于子类实现

    JDk 8新增的方法：
        默认方法：default修饰，实现类创建对象调用
        静态方法：static修饰，必须用当前接口名调用
    JDK 9新增的方法：
        私有方法：private修饰，只在接口内部调用

多态：（必须有继承或实现关系才可以用）
    父类类型 对象名 = new 子类构造器;
    接口 对象名称 = new 实现类构造器;

    多态中成员访问特点：
        方法调用：编译看左边，运行看右边
        变量调用：编译和运行都看左边

    多态下不可以访问子类的独有功能
    可以使用强制类型转换解决这个问题
        子类 对象变量名 = (子类)父类类型的变量
        这样就可以调用子类的独有功能了

内部类：
    定义在类里面的类，里面的类可以理解为寄生，外部类可以理解为宿主

    分类：
        静态内部类(static修饰)
            外部类名.内部类名 对象名 = new 外部类名.内部类构造器();
        成员内部类(无static修饰)
            外部类名.内部类名 对象名 = new 外部类构造器().new 内部类构造器();
        局部内部类
        匿名内部类
            Employee a = new Employee(){
                public void work(){

                }
            };
            a.work();


